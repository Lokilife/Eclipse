const discord  = require("discord.js");
const config   = require("../../../config.json");
const errors   = require("../../lib/errors.js");
const tools    = require("../../lib/tools.js");

module.exports = {
    /**
     * @param {Message} message 
     * @param {Client} bot
     * @param {Array<String>} args
     */
    "run": async function(message, bot, args) {
        const footer = require("../../templates.json").footer.replace(/{TAG}/, message.author.tag);
        if(args[0]) {

            let c = bot.commands.find(m => m.aliases.includes(args[0])); //  c –æ—Ç command.
            
            if(!c) return errors.falseArgs(message,"–¢–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã/–∞–ª–∏–∞—Å–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!");

            return message.channel.send(new discord.MessageEmbed().setColor(config.colors.default)
            .setTitle(`–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–µ ${c.aliases[0]}`)
            .setDescription(c.help.description)
            .addField('–ê—Ä–≥—É–º–µ–Ω—Ç—ã:', c.help.arguments)
            .addField('–ü—Ä–∏–º–µ—Ä—ã:', c.help.usage)
            .addField('–ú–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:', tools.securitylevel(c.userPermissions), true)
            .setFooter(footer));

        }

        let categories = ["–û–±—â–µ–µ", "–ü–æ–ª–µ–∑–Ω–æ–µ", "–ú–æ–¥–µ—Ä–∞—Ü–∏—è", "–ú—É–∑—ã–∫–∞", "–ü—Ä–æ—á–µ–µ"];
        //bot.commands.forEach(value => {if(categories.indexOf(value.help.category) == -1 && value.help.category != "Owners") categories.push(value.help.category)});

        let emb         = new discord.MessageEmbed().setColor(config.colors.default).setTitle('–ü–æ–º–æ—â—å').setDescription(`\`${config.prefix}help <–∫–æ–º–∞–Ω–¥–∞>\` –¥–ª—è —É–≥–ª—É–±–ª—ë–Ω–Ω–æ–π –ø–æ–º–æ—â–∏ –ø–æ –∫–æ–º–∞–Ω–¥–µ'`).setFooter(footer)
        let numbers     = ["1Ô∏è‚É£", "2Ô∏è‚É£", "3Ô∏è‚É£", "4Ô∏è‚É£", "5Ô∏è‚É£", "6Ô∏è‚É£", "7Ô∏è‚É£", "8Ô∏è‚É£", "9Ô∏è‚É£", "üîü"] //  –¢—ã —Ü–µ–ª—ã–π –º–∞–ø —Å–¥–µ–ª–∞–ª –¥–ª—è —ç—Ç–æ–≥–æ. –Ø —Ä–∞–∑–æ–±—Ä–∞–ª—Å—è –æ–¥–Ω–∏–º –º–∞—Å—Å–∏–≤–æ–º!
        
        let fields = {
            "1Ô∏è‚É£": {
                "name": "–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ",
                "value": ""
            }
        }

        fields['1Ô∏è‚É£'].value = "1. –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ\n";
        for(let i=0; i < categories.length; i++) {
            fields['1Ô∏è‚É£'].value += `${i+2}. ${categories[i]}\n`;
        }

        let i1 = 0;
        for(;i1<categories.length;i1++) {
            fields[numbers[i1+1]] = {
                "name": categories[i1],
                "value": ""
            }

            bot.commands.filter(m => m.help.category == categories[i1]).forEach(elm => {
                fields[numbers[i1+1]].value += `**${config.prefix}${elm.aliases[0]}** - ${elm.help.description}\n`
            })

            if(fields[numbers[i1+1]].value == "") fields[numbers[i1+1]].value = "–¢—É—Ç –ø–æ–∫–∞ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç..."
        }

        message.channel.send(emb.addField(fields['1Ô∏è‚É£'].name,fields['1Ô∏è‚É£'].value))
        .then(async msg=> {

            numbers = numbers.slice(0,i1+1)
            
            for (const number of numbers) await msg.react(number);

            let filter     = (reaction,user) => numbers.includes(reaction.emoji.name) && user.id === message.author.id
            let collector  = msg.createReactionCollector(filter, {idle:3e4});

            collector.on('collect',(r) => {
                try {
                    msg.reactions.cache.get(r.emoji.name).users.remove(message.client.users.cache.get(message.author.id));
                } catch (err) {console.log(err)}

                emb.fields = [fields[r.emoji.name]];
                msg.edit(emb)
            });
            
            collector.on('end', async () => {
                try {
                    await msg.reactions.removeAll();
                    await msg.edit(emb.setFooter(`[–í—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ] ${footer}`));
                } catch (err) {console.log(err)}
            })
        })
    },
    "aliases": ["help", "?", "h"],
    "help": {
        "category": "–û–±—â–µ–µ",
        "description": "–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º",
        "arguments": `**<command>** - –ü–æ–∫–∞–∑–∞—Ç—å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ\n**<–ù–µ—Ç>** - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥`,
        "usage": `**${config.prefix}help** - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥\n**${config.prefix}help help** - –ë–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ help`,
    },
    "botPermissions": ["ADD_REACTIONS","MANAGE_MESSAGES"],
    "userPermissions": []
}

/*
TODO!!!:

88,97 —Å—Ç—Ä–æ–∫–∞ : console.log. –í–æ–∑–º–æ–∂–Ω–æ –∑–∞—Ö–æ—á–µ—à—å —á—Ç–æ-—Ç–æ —Å —ç—Ç–∏–º —Å–¥–µ–ª–∞—Ç—å
*/