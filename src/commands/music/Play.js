const config        = require('../../../config.json')
const { Message }   = require('discord.js')
const ytdl          = require('ytdl-core')
const yts           = require('yt-search')
const Join          = require('./Join')


module.exports = {
    run: async function(message, client, args) {
        const joined = await Join.run(message, client, [], false)
        
        if (!joined || joined instanceof Message) return

        const query = args.join(' ')
        let queue = client.queue.get(message.guild.id)

        let url = true
        try {
            url = new URL(query).searchParams
        } catch(e) {
            url = false
        }

        await message.channel.send(`**Searching üîé** \`${query}\``)
        console.log(url)
        let result = (await yts(url ? url.toString() : query)).videos[0]

        if (url && url.get("list")) { // –ï—Å–ª–∏ —ç—Ç–æ –ø–ª–µ–π–ª–∏—Å—Ç, –∞ –Ω–µ –≤–∏–¥–µ–æ
            result = await yts({listId: url.get('v')})[0]
            
            const videos = result.videos
            const first_video = videos.shift()
            
            client.queue.set(message.guild.id, [...result, ...queue])
            
            await message.channel.send(`**Playing üé∂** \`${result.title}\` - Now!`)
            
            this.run(message, client, [first_video.url])
            return
        }
        const connection = client.voice.connections.get(message.guild.id)
        
        if (!connection)
            return await message.channel.send("**‚ùå I'm not connected to any voice channel!**")
        
        const readStream = ytdl(result.url, {filter: "audioonly"})

        connection.play(readStream)

        await message.channel.send(`**Playing üé∂** \`${result.title}\` - Now!`)

        if (queue && queue.length) {
            const first_video = queue.shift()
            client.queue.set(message.guild.id, queue)
            this.run(message, client, [first_video.url])
        }
    },
    aliases: ["play", "pl", "p"],
    help: {
        "category": "–ú—É–∑—ã–∫–∞",
        "description": "–ù–∞—á–∞—Ç—å –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏–µ –∫–∞–∫–æ–π-–ª–∏–±–æ –ø–µ—Å–Ω–∏ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ\n**–í–Ω–∏–º–∞–Ω–∏–µ!** –ö–æ–º–∞–Ω–¥–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∏ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫–∞–º!",
        "arguments": `<–ó–∞–ø—Ä–æ—Å –∏–ª–∏ —Å—Å—ã–ª–∫–∞> - –ù–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞—à—É –ø–µ—Å–Ω—é`,
        "usage": `**${config.prefix}play <–ó–∞–ø—Ä–æ—Å –∏–ª–∏ —Å—Å—ã–ª–∫–∞>** ` + 
        `- –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—Å—è –∫ –≤–∞—à–µ–º—É –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É –∏ –Ω–∞—á–Ω—ë—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å —É–∫–∞–∑–∞–Ω–Ω—É—é –ø–µ—Å–Ω—é.`,
    },
    botPermissions: ["CONNECT"]
}